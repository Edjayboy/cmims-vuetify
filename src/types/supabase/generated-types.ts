/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          brgy_id?: parameters["rowFilter.profiles.brgy_id"];
          role?: parameters["rowFilter.profiles.role"];
          phone_number?: parameters["rowFilter.profiles.phone_number"];
          email?: parameters["rowFilter.profiles.email"];
          user_id?: parameters["rowFilter.profiles.user_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          brgy_id?: parameters["rowFilter.profiles.brgy_id"];
          role?: parameters["rowFilter.profiles.role"];
          phone_number?: parameters["rowFilter.profiles.phone_number"];
          email?: parameters["rowFilter.profiles.email"];
          user_id?: parameters["rowFilter.profiles.user_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          brgy_id?: parameters["rowFilter.profiles.brgy_id"];
          role?: parameters["rowFilter.profiles.role"];
          phone_number?: parameters["rowFilter.profiles.phone_number"];
          email?: parameters["rowFilter.profiles.email"];
          user_id?: parameters["rowFilter.profiles.user_id"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/brand_items": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brand_items.id"];
          created_at?: parameters["rowFilter.brand_items.created_at"];
          quantity?: parameters["rowFilter.brand_items.quantity"];
          brandId?: parameters["rowFilter.brand_items.brandId"];
          itemId?: parameters["rowFilter.brand_items.itemId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["brand_items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** brand_items */
          brand_items?: definitions["brand_items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brand_items.id"];
          created_at?: parameters["rowFilter.brand_items.created_at"];
          quantity?: parameters["rowFilter.brand_items.quantity"];
          brandId?: parameters["rowFilter.brand_items.brandId"];
          itemId?: parameters["rowFilter.brand_items.itemId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brand_items.id"];
          created_at?: parameters["rowFilter.brand_items.created_at"];
          quantity?: parameters["rowFilter.brand_items.quantity"];
          brandId?: parameters["rowFilter.brand_items.brandId"];
          itemId?: parameters["rowFilter.brand_items.itemId"];
        };
        body: {
          /** brand_items */
          brand_items?: definitions["brand_items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/brgy": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brgy.id"];
          created_at?: parameters["rowFilter.brgy.created_at"];
          name?: parameters["rowFilter.brgy.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["brgy"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** brgy */
          brgy?: definitions["brgy"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brgy.id"];
          created_at?: parameters["rowFilter.brgy.created_at"];
          name?: parameters["rowFilter.brgy.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brgy.id"];
          created_at?: parameters["rowFilter.brgy.created_at"];
          name?: parameters["rowFilter.brgy.name"];
        };
        body: {
          /** brgy */
          brgy?: definitions["brgy"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/items": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          description?: parameters["rowFilter.items.description"];
          expirationDate?: parameters["rowFilter.items.expirationDate"];
          dateManufactured?: parameters["rowFilter.items.dateManufactured"];
          units?: parameters["rowFilter.items.units"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** items */
          items?: definitions["items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          description?: parameters["rowFilter.items.description"];
          expirationDate?: parameters["rowFilter.items.expirationDate"];
          dateManufactured?: parameters["rowFilter.items.dateManufactured"];
          units?: parameters["rowFilter.items.units"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          description?: parameters["rowFilter.items.description"];
          expirationDate?: parameters["rowFilter.items.expirationDate"];
          dateManufactured?: parameters["rowFilter.items.dateManufactured"];
          units?: parameters["rowFilter.items.units"];
        };
        body: {
          /** items */
          items?: definitions["items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user_profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_profiles.id"];
          created_at?: parameters["rowFilter.user_profiles.created_at"];
          full_name?: parameters["rowFilter.user_profiles.full_name"];
          brgy_id?: parameters["rowFilter.user_profiles.brgy_id"];
          role?: parameters["rowFilter.user_profiles.role"];
          user_id?: parameters["rowFilter.user_profiles.user_id"];
          email?: parameters["rowFilter.user_profiles.email"];
          phone_number?: parameters["rowFilter.user_profiles.phone_number"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user_profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user_profiles */
          user_profiles?: definitions["user_profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_profiles.id"];
          created_at?: parameters["rowFilter.user_profiles.created_at"];
          full_name?: parameters["rowFilter.user_profiles.full_name"];
          brgy_id?: parameters["rowFilter.user_profiles.brgy_id"];
          role?: parameters["rowFilter.user_profiles.role"];
          user_id?: parameters["rowFilter.user_profiles.user_id"];
          email?: parameters["rowFilter.user_profiles.email"];
          phone_number?: parameters["rowFilter.user_profiles.phone_number"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_profiles.id"];
          created_at?: parameters["rowFilter.user_profiles.created_at"];
          full_name?: parameters["rowFilter.user_profiles.full_name"];
          brgy_id?: parameters["rowFilter.user_profiles.brgy_id"];
          role?: parameters["rowFilter.user_profiles.role"];
          user_id?: parameters["rowFilter.user_profiles.user_id"];
          email?: parameters["rowFilter.user_profiles.email"];
          phone_number?: parameters["rowFilter.user_profiles.phone_number"];
        };
        body: {
          /** user_profiles */
          user_profiles?: definitions["user_profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user_inventory_requests": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_inventory_requests.id"];
          created_at?: parameters["rowFilter.user_inventory_requests.created_at"];
          user_id?: parameters["rowFilter.user_inventory_requests.user_id"];
          acknowledged_by?: parameters["rowFilter.user_inventory_requests.acknowledged_by"];
          is_read?: parameters["rowFilter.user_inventory_requests.is_read"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user_inventory_requests"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user_inventory_requests */
          user_inventory_requests?: definitions["user_inventory_requests"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_inventory_requests.id"];
          created_at?: parameters["rowFilter.user_inventory_requests.created_at"];
          user_id?: parameters["rowFilter.user_inventory_requests.user_id"];
          acknowledged_by?: parameters["rowFilter.user_inventory_requests.acknowledged_by"];
          is_read?: parameters["rowFilter.user_inventory_requests.is_read"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_inventory_requests.id"];
          created_at?: parameters["rowFilter.user_inventory_requests.created_at"];
          user_id?: parameters["rowFilter.user_inventory_requests.user_id"];
          acknowledged_by?: parameters["rowFilter.user_inventory_requests.acknowledged_by"];
          is_read?: parameters["rowFilter.user_inventory_requests.is_read"];
        };
        body: {
          /** user_inventory_requests */
          user_inventory_requests?: definitions["user_inventory_requests"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/brands": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brands.id"];
          created_at?: parameters["rowFilter.brands.created_at"];
          name?: parameters["rowFilter.brands.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["brands"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** brands */
          brands?: definitions["brands"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brands.id"];
          created_at?: parameters["rowFilter.brands.created_at"];
          name?: parameters["rowFilter.brands.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brands.id"];
          created_at?: parameters["rowFilter.brands.created_at"];
          name?: parameters["rowFilter.brands.name"];
        };
        body: {
          /** brands */
          brands?: definitions["brands"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default gen_random_uuid()
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    full_name?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `brgy.id`.<fk table='brgy' column='id'/>
     */
    brgy_id?: number;
    /** Format: text */
    role: string;
    /** Format: text */
    phone_number?: string;
    /** Format: character varying */
    email?: string;
    /** Format: uuid */
    user_id?: string;
  };
  /** @description This is a relational table for brands and items */
  brand_items: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: bigint */
    quantity?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `brands.id`.<fk table='brands' column='id'/>
     */
    brandId?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `items.id`.<fk table='items' column='id'/>
     */
    itemId?: number;
  };
  brgy: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
  };
  items: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: text */
    description?: string;
    /** Format: character varying */
    expirationDate?: string;
    /** Format: character varying */
    dateManufactured?: string;
    /** Format: character varying */
    units?: string;
  };
  user_profiles: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    full_name?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `brgy.id`.<fk table='brgy' column='id'/>
     */
    brgy_id?: number;
    /** Format: text */
    role?: string;
    /** Format: uuid */
    user_id?: string;
    /** Format: text */
    email: string;
    /** Format: text */
    phone_number?: string;
  };
  user_inventory_requests: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: uuid */
    user_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    acknowledged_by?: string;
    /** Format: boolean */
    is_read?: boolean;
  };
  brands: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferPost:
    | "return=representation"
    | "return=minimal"
    | "return=none"
    | "resolution=ignore-duplicates"
    | "resolution=merge-duplicates";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.full_name": string;
  /** Format: bigint */
  "rowFilter.profiles.brgy_id": string;
  /** Format: text */
  "rowFilter.profiles.role": string;
  /** Format: text */
  "rowFilter.profiles.phone_number": string;
  /** Format: character varying */
  "rowFilter.profiles.email": string;
  /** Format: uuid */
  "rowFilter.profiles.user_id": string;
  /** @description brand_items */
  "body.brand_items": definitions["brand_items"];
  /** Format: bigint */
  "rowFilter.brand_items.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.brand_items.created_at": string;
  /** Format: bigint */
  "rowFilter.brand_items.quantity": string;
  /** Format: bigint */
  "rowFilter.brand_items.brandId": string;
  /** Format: bigint */
  "rowFilter.brand_items.itemId": string;
  /** @description brgy */
  "body.brgy": definitions["brgy"];
  /** Format: bigint */
  "rowFilter.brgy.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.brgy.created_at": string;
  /** Format: character varying */
  "rowFilter.brgy.name": string;
  /** @description items */
  "body.items": definitions["items"];
  /** Format: bigint */
  "rowFilter.items.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.items.created_at": string;
  /** Format: character varying */
  "rowFilter.items.name": string;
  /** Format: text */
  "rowFilter.items.description": string;
  /** Format: character varying */
  "rowFilter.items.expirationDate": string;
  /** Format: character varying */
  "rowFilter.items.dateManufactured": string;
  /** Format: character varying */
  "rowFilter.items.units": string;
  /** @description user_profiles */
  "body.user_profiles": definitions["user_profiles"];
  /** Format: bigint */
  "rowFilter.user_profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.user_profiles.created_at": string;
  /** Format: text */
  "rowFilter.user_profiles.full_name": string;
  /** Format: bigint */
  "rowFilter.user_profiles.brgy_id": string;
  /** Format: text */
  "rowFilter.user_profiles.role": string;
  /** Format: uuid */
  "rowFilter.user_profiles.user_id": string;
  /** Format: text */
  "rowFilter.user_profiles.email": string;
  /** Format: text */
  "rowFilter.user_profiles.phone_number": string;
  /** @description user_inventory_requests */
  "body.user_inventory_requests": definitions["user_inventory_requests"];
  /** Format: bigint */
  "rowFilter.user_inventory_requests.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.user_inventory_requests.created_at": string;
  /** Format: uuid */
  "rowFilter.user_inventory_requests.user_id": string;
  /** Format: uuid */
  "rowFilter.user_inventory_requests.acknowledged_by": string;
  /** Format: boolean */
  "rowFilter.user_inventory_requests.is_read": string;
  /** @description brands */
  "body.brands": definitions["brands"];
  /** Format: bigint */
  "rowFilter.brands.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.brands.created_at": string;
  /** Format: character varying */
  "rowFilter.brands.name": string;
}

export interface operations {}

export interface external {}
